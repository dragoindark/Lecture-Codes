package task11;

public class oddThread extends Thread{
	private int[][] matrix;
	private int startIndex, threadDelay;
	private int totalSum = 0;
	private String threadName;

	Thread myOddThread;

	public oddThread(int[][] matrix, int startIndex, String threadName, int threadPriority, int threadDelay) {
		super(threadName);
		this.matrix = matrix;
		this.startIndex = startIndex;
		this.threadDelay = threadDelay;
		this.threadName=threadName;
		myOddThread=new Thread(this);
		myOddThread.setPriority(threadPriority);
		myOddThread.start();
	}

	public void getSum() {
		System.out.println(myOddThread.toString()+" Sum:" + totalSum + ".");
	}

	public Thread getThread() {
		return myOddThread;
	}

	public int getDelay() {
		return threadDelay;
	}

	public int getIndex() {
		return startIndex;
	}

	@Override
	public void run() {
		for (int i = startIndex; i < matrix.length; i++) {
			int rowSum = 0;
			if ((i % 2) == 1) {
				for (int j = 0; j < matrix[i].length; j++) {
					rowSum += matrix[i][j];
				}
				totalSum += rowSum;
				System.out.println(myOddThread.toString()+" Row:" + i + ", Sum:" + rowSum);
			}
			try {
				myOddThread.sleep(threadDelay);
			} catch (InterruptedException e) {

				e.printStackTrace();
			}
		}
	}
}
